// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.




#include "DriveTrain.h"
#include "../RobotMap.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "../Commands/DriveTrainDefaultCommand.h"
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include <math.h>

DriveTrain::DriveTrain() : Subsystem("DriveTrain") {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	speedcontrollerFR = RobotMap::driveTrainspeedcontrollerFR;
	speedcontrollerFL = RobotMap::driveTrainspeedcontrollerFL;
	speedcontrollerBR = RobotMap::driveTrainspeedcontrollerBR;
	speedcontrollerBL = RobotMap::driveTrainspeedcontrollerBL;
	omnidrive = RobotMap::driveTrainomnidrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}
    
void DriveTrain::InitDefaultCommand() {
	// Set the default command for a subsystem here.
	//SetDefaultCommand(new MySpecialCommand());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	SetDefaultCommand(new DriveTrainDefaultCommand());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}


// Put methods for controlling this subsystem
// here. Call these from Commands.
void DriveTrain::drive(Joystick *joy)
{
	double x,y,z;

	x = pow(joy->GetX(),3);
	y = pow(joy->GetY(),3);
	z = (joy->GetZ()/2);
	omnidrive->MecanumDrive_Cartesian(x, y, z);
	SmartDashboard::PutNumber("Front Right", speedcontrollerFR->Get());
	SmartDashboard::PutNumber("Front Left", speedcontrollerFL->Get());
	SmartDashboard::PutNumber("Back Right", speedcontrollerBR->Get());
	SmartDashboard::PutNumber("Back Left", speedcontrollerBL->Get());

	/*if (joy->GetRawButton(1)){
		speedcontrollerFR->Set(0.25);
	}
	if (joy->GetRawButton(2)){
		speedcontrollerFL->Set(0.25);
	}
	if (joy->GetRawButton(3)){
		speedcontrollerBR->Set(0.25);
	}
	if (joy->GetRawButton(4)){
		speedcontrollerBL->Set(0.25);
	}*/
}
void DriveTrain::autodrive(int x, int y, int z)
{
	omnidrive->MecanumDrive_Cartesian(x, y, z);
}
void DriveTrain::driveForward(bool b)
{
	omnidrive->MecanumDrive_Cartesian(0, 0.5, 0);
}
